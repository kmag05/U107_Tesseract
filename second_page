<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reflective Wellness Journal</title>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            font-family: 'Georgia', serif;
            background-color: #b2ebf2;
            height: 100%;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        header {
            background-color: #2c3e50;
            color: #ecf0f1;
            text-align: center;
            padding: 1.5rem 2rem 3.5rem;
            font-size: 2rem;
            width: 100%;
            position: relative;
            overflow: hidden;
        }
        header::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: -5%;
            right: -5%;
            height: 50px;
            background-color: #b2ebf2;
            border-radius: 50% 50% 0 0 / 100% 100% 0 0;
            box-shadow: 0 -2px 10px rgba(0,0,0,0.1);
        }
        .welcome-message {
            text-align: center;
            font-size: 1.5rem;
            color: #2c3e50;
            margin-top: 1rem;
            margin-bottom: 1rem;
        }
        .content-container {
            max-width: 800px;
            width: 90%;
            margin: 1rem auto;
            background-color: #fff;
            border-radius: 10px;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        h2 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 1.5rem;
            font-size: 1.8rem;
        }
        .emotion-buttons {
            display: flex;
            justify-content: space-around;
            flex-wrap: wrap;
            gap: 1rem;
            margin-top: 1rem;
        }
        button {
            padding: 0.7rem 1.5rem;
            font-size: 1rem;
            cursor: pointer;
            border: none;
            border-radius: 25px;
            transition: all 0.3s ease;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
            font-family: 'Georgia', serif;
        }
        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0,0,0,0.2);
        }
        #followUpContent {
            margin-top: 2rem;
            text-align: center;
        }
        #emotionResponse {
            font-size: 1.2rem;
            color: #34495e;
            margin-bottom: 1.5rem;
            font-style: italic;
        }
        #journalEntry, #promptResponse {
            width: 100%;
            height: 150px;
            margin-top: 1rem;
            padding: 0.5rem;
            border: 1px solid #bdc3c7;
            border-radius: 10px;
            font-size: 1rem;
            resize: vertical;
            font-family: 'Georgia', serif;
        }
        .hidden {
            display: none;
        }
        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 1rem;
            margin-top: 1.5rem;
        }
        .action-button {
            background-color: #3498db;
            color: white;
        }
        #submitResponse {
            background-color: #2ecc71;
            color: white;
            margin-top: 1rem;
        }
        #goalSection {
            margin-top: 2rem;
            text-align: left;
        }
        .goal-input {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }
        .goal-input span {
            margin-right: 0.5rem;
            white-space: nowrap;
        }
        .goal-input input {
            flex-grow: 1;
            padding: 0.5rem;
            font-size: 1rem;
            border: 1px solid #bdc3c7;
            border-radius: 5px;
            margin-right: 0.5rem;
        }
        .bubble-container {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            align-items: center;
        }
        .bubble {
            background-color: #3498db;
            color: white;
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            display: inline-flex;
            align-items: center;
            font-size: 0.9rem;
        }
        .bubble span {
            margin-right: 0.5rem;
        }
        .bubble button {
            background: none;
            border: none;
            color: white;
            font-size: 1rem;
            cursor: pointer;
            padding: 0;
            margin: 0;
        }
        .goal-row {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
        }
        .goal-row > * {
            margin-right: 0.5rem;
        }
        #loginForm {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 1rem;
        }
        #loginForm input {
            padding: 0.5rem;
            font-size: 1rem;
            border: 1px solid #bdc3c7;
            border-radius: 5px;
            width: 200px;
        }
        #loginForm button {
            background-color: #3498db;
            color: white;
        }
    </style>
</head>
<body>
    <header>Reflective Wellness Journal</header>
    <div id="loginContainer" class="content-container">
        <h2>Login</h2>
        <form id="loginForm">
            <input type="text" id="username" placeholder="Username" required>
            <input type="password" id="password" placeholder="Password" required>
            <button type="submit">Enter</button>
        </form>
    </div>
    <div id="mainContent" class="content-container hidden">
        <div class="welcome-message"></div>
        <h2>How are you feeling today?</h2>
        <div class="emotion-buttons">
            <button onclick="selectEmotion('happy')" style="background-color: #f1c40f;">Happy</button>
            <button onclick="selectEmotion('scared')" style="background-color: #9b59b6;">Scared</button>
            <button onclick="selectEmotion('freakingOut')" style="background-color: #e74c3c;">Freaking Out</button>
            <button onclick="selectEmotion('annoyed')" style="background-color: #e67e22;">Annoyed</button>
            <button onclick="selectEmotion('jealous')" style="background-color: #16a085;">Jealous</button>
        </div>
        <div id="followUpContent" class="hidden">
            <p id="emotionResponse"></p>
            <div class="action-buttons">
                <button onclick="showJournalEntry()" class="action-button">Pen Your Thoughts</button>
                <button onclick="showPrompt()" class="action-button">Reflect on a Prompt</button>
                <button onclick="showGoals()" class="action-button">Change My Goals</button>
            </div>
            <textarea id="journalEntry" class="hidden" placeholder="Express your thoughts here..."></textarea>
            <div id="promptSection" class="hidden">
                <p id="promptText"></p>
                <textarea id="promptResponse" placeholder="Your reflections on the prompt..."></textarea>
                <button id="submitResponse" onclick="submitPromptResponse()">Submit Reflection</button>
            </div>
            <div id="goalSection" class="hidden">
                <div class="goal-row">
                    <span>Currently I feel:</span>
                    <input type="text" id="currentFeelingInput" onkeypress="handleKeyPress(event, 'current')">
                    <div id="currentFeelings" class="bubble-container"></div>
                </div>
                <div class="goal-row">
                    <span>I want to feel:</span>
                    <input type="text" id="desiredFeelingInput" onkeypress="handleKeyPress(event, 'desired')">
                    <div id="desiredFeelings" class="bubble-container"></div>
                </div>
            </div>
        </div>
    </div>

    <script>
        const emotions = {
            happy: "We're delighted to hear you're feeling happy. Let's take a moment to reflect on this positive state.",
            scared: "It's okay to feel scared. Let's explore ways to find comfort and security.",
            freakingOut: "We understand you're feeling overwhelmed. Let's work on some calming techniques together.",
            annoyed: "Feeling annoyed is natural. Let's reflect on the source and how to address it constructively.",
            jealous: "Jealousy can be challenging. Let's explore these feelings and find a positive perspective."
        };

        const prompts = {
            happy: "Reflect on what's contributing to your happiness today. How can you cultivate more of these positive experiences?",
            scared: "What's one small step you can take to feel more secure in this moment?",
            freakingOut: "Take a deep breath. Now, let's identify one thing you can control in your current situation.",
            annoyed: "Consider the source of your annoyance. Is there a constructive way to address or reframe this situation?",
            jealous: "Reflect on your personal strengths and achievements. How can you focus on your own growth journey?"
        };

        let currentEmotion = '';

        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const username = document.getElementById('username').value;
            document.getElementById('loginContainer').classList.add('hidden');
            document.getElementById('mainContent').classList.remove('hidden');
            document.querySelector('.welcome-message').textContent = Welcome, ${username}!;
        });

        function selectEmotion(emotion) {
            document.getElementById('emotionResponse').textContent = emotions[emotion];
            document.getElementById('followUpContent').classList.remove('hidden');
            currentEmotion = emotion;
        }

        function showJournalEntry() {
            document.getElementById('journalEntry').classList.remove('hidden');
            document.getElementById('promptSection').classList.add('hidden');
            document.getElementById('goalSection').classList.add('hidden');
        }

        function showPrompt() {
            document.getElementById('promptText').textContent = prompts[currentEmotion];
            document.getElementById('promptSection').classList.remove('hidden');
            document.getElementById('journalEntry').classList.add('hidden');
            document.getElementById('goalSection').classList.add('hidden');
        }

        function showGoals() {
            document.getElementById('goalSection').classList.remove('hidden');
            document.getElementById('journalEntry').classList.add('hidden');
            document.getElementById('promptSection').classList.add('hidden');
        }

        function submitPromptResponse() {
            alert("Your reflection has been recorded. Thank you for taking the time to introspect.");
            document.getElementById('promptResponse').value = '';
        }

        function handleKeyPress(event, type) {
            if (event.key === 'Enter') {
                event.preventDefault();
                const input = event.target;
                const value = input.value.trim();
                if (value) {
                    addBubble(value, type);
                    input.value = '';
                }
            }
        }

        function addBubble(text, type) {
            const container = document.getElementById(type === 'current' ? 'currentFeelings' : 'desiredFeelings');
            const bubble = document.createElement('div');
            bubble.className = 'bubble';
            bubble.innerHTML = <span>${text}</span><button onclick="removeBubble(this)">×</button>;
            container.appendChild(bubble);
        }

        function removeBubble(button) {
            button.parentElement.remove();
        }
    </script>
</body>
</html>
